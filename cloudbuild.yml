options:
  dynamic_substitutions: true
  logging: CLOUD_LOGGING_ONLY

steps:
  # Build Playwright Service
  - name: 'gcr.io/cloud-builders/docker'
    id: 'build-playwright'
    args: [
      'build',
      '-t', '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPO_NAME}/playwright-service:$COMMIT_SHA',
      './apps/playwright-service-ts'
    ]

  # Push Playwright Service
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'push',
      '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPO_NAME}/playwright-service:$COMMIT_SHA'
    ]

  # Deploy Playwright Service
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'deploy-playwright'
    entrypoint: gcloud
    args: [
      'run', 'deploy', 'playwright-service',
      '--image', '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPO_NAME}/playwright-service:$COMMIT_SHA',
      '--region', '${_REGION}',
      '--platform', 'managed',
      '--port', '3000',
      '--vpc-connector', 'crawlweb-connector',

      '--set-secrets', 'PROXY_SERVER=PROXY_SERVER:latest,PROXY_USERNAME=PROXY_USERNAME:latest,PROXY_PASSWORD=PROXY_PASSWORD:latest',
      '--memory', '2Gi',
      '--cpu', '2',
      '--timeout', '3600'
    ]

  # Build API Service
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'build',
      '-t', '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPO_NAME}/api-service:$COMMIT_SHA',
      './apps/api'
    ]
    waitFor: ['deploy-playwright']

  # Push API Service
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'push',
      '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPO_NAME}/api-service:$COMMIT_SHA'
    ]
    waitFor: ['deploy-playwright']

  # Deploy API Service (conditional)
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        if [ "${_DEPLOY_API}" = "true" ]; then
          gcloud run deploy api-service \
            --image=${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPO_NAME}/api-service:$COMMIT_SHA \
            --region=${_REGION} \
            --platform=managed \
            --port=3002 \
            --vpc-connector=crawlweb-connector \
            --command="pnpm,run,start:production" \
            --set-env-vars="REDIS_URL=redis://${_REDIS_IP}:6379,PLAYWRIGHT_MICROSERVICE_URL=${_PLAYWRIGHT_URL}/scrape,USE_DB_AUTHENTICATION=${_USE_DB_AUTHENTICATION},LOGGING_LEVEL=${_LOGGING_LEVEL}" \
            --service-account="${_SERVICE_ACCOUNT}" \
            --set-secrets="SUPABASE_URL=SUPABASE_URL:latest,SUPABASE_ANON_TOKEN=SUPABASE_ANON_TOKEN:latest,SUPABASE_SERVICE_TOKEN=SUPABASE_SERVICE_TOKEN:latest,OPENAI_API_KEY=OPENAI_API_KEY:latest" \
            --memory=2Gi \
            --cpu=2 \
            --timeout=3600
        fi
    waitFor: ['deploy-playwright']

  # Deploy Worker Service (conditional)
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        if [ "${_DEPLOY_WORKER}" = "true" ]; then
          gcloud run deploy worker-service \
            --image=${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPO_NAME}/api-service:$COMMIT_SHA \
            --region=${_REGION} \
            --platform=managed \
            --vpc-connector=crawlweb-connector \
            --command="pnpm,run,workers" \
            --set-env-vars="REDIS_URL=redis://${_REDIS_IP}:6379,PLAYWRIGHT_MICROSERVICE_URL=${_PLAYWRIGHT_URL}/scrape" \
            --set-secrets="SUPABASE_URL=SUPABASE_URL:latest,SUPABASE_ANON_TOKEN=SUPABASE_ANON_TOKEN:latest,SUPABASE_SERVICE_TOKEN=SUPABASE_SERVICE_TOKEN:latest,OPENAI_API_KEY=OPENAI_API_KEY:latest" \
            --memory=2Gi \
            --cpu=2 \
            --timeout=3600 \
            --no-allow-unauthenticated
        fi
    waitFor: ['deploy-playwright']

substitutions:
  _REGION: us-west2
  _REPO_NAME: crawlweb-repo
  _REDIS_IP: ""
  _PLAYWRIGHT_URL: ""
  _DEPLOY_API: "false"
  _DEPLOY_WORKER: "false"
  _USE_DB_AUTHENTICATION: "false"
  _LOGGING_LEVEL: "info"
  _SERVICE_ACCOUNT: "475988465347-compute@developer.gserviceaccount.com"

